{"remainingRequest":"/Users/eunmi/Desktop/donuts/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunmi/Desktop/donuts/src/views/noticeList.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/eunmi/Desktop/donuts/src/views/noticeList.vue","mtime":1585369899704},{"path":"/Users/eunmi/Desktop/donuts/node_modules/css-loader/dist/cjs.js","mtime":1585021416194},{"path":"/Users/eunmi/Desktop/donuts/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/eunmi/Desktop/donuts/node_modules/postcss-loader/src/index.js","mtime":1585021417191},{"path":"/Users/eunmi/Desktop/donuts/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunmi/Desktop/donuts/node_modules/cache-loader/dist/cjs.js","mtime":1585021415740},{"path":"/Users/eunmi/Desktop/donuts/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250YWluZXIgewogIHdpZHRoOiA3NTBweDsKICBtYXJnaW46IDAgYXV0bzsKICBjb2xvcjogIzFmMjEyNTsKICBoMiB7CiAgICBtYXJnaW46IDY5cHggMCA0NXB4IDA7CiAgICBmb250LXNpemU6IDQycHg7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIGxpbmUtaGVpZ2h0OiAxLjM4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogIH0KCiAgLmxpc3QgewogICAgLnNlbGVjdC1saXN0IHsKICAgICAgZGlzcGxheTogZmxleDsKCiAgICAgIGxpIHsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgICAgICAgcGFkZGluZy1ib3R0b206IDE1cHg7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwoKICAgICAgICAmLmFjdGl2ZSB7CiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCAjNTBiMGIxOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIC5jb250ZW50LWNvbnRhaW5lciB7CiAgICAgIGJvcmRlci10b3A6IHNvbGlkIDFweCAjZTVlNWU1OwogICAgfQogIH0KfQo="},{"version":3,"sources":["noticeList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"noticeList.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"list\" class=\"container m-6\">\n    <h2>공지사항</h2>\n    <div class=\"list\">\n      <ul class=\"select-list\">\n        <li @click=\"noticeType = 0\" :class=\"{ active: noticeType == 0 }\">\n          전체\n        </li>\n        <li @click=\"noticeType = 1\" :class=\"{ active: noticeType == 1 }\">\n          공지\n        </li>\n        <li @click=\"noticeType = 2\" :class=\"{ active: noticeType == 2 }\">\n          이벤트\n        </li>\n        <li @click=\"noticeType = 3\" :class=\"{ active: noticeType == 3 }\">\n          보도자료\n        </li>\n      </ul>\n      <div class=\"content-container\">\n        <listDetail :datas=\"noticeList\" />\n        <div class=\"pagination-container\">\n          <paginate\n            :page-count=\"20\"\n            :page-range=\"3\"\n            :margin-pages=\"2\"\n            :click-handler=\"clickCallback\"\n            :prev-text=\"'<'\"\n            :next-text=\"'>'\"\n            :container-class=\"'pagination'\"\n            :page-class=\"'page-item'\"\n          >\n          </paginate>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Paginate from \"vuejs-paginate\";\nimport { listPage } from \"../api/index\";\n\nimport listDetail from \"../components/list/listDetail2\";\n//import { listPage } from \"../../api/index\";\n\nexport default {\n  name: \"noticeList\",\n  props: {},\n  components: {\n    listDetail,\n    Paginate\n  },\n  // 초기화, 기본 값 설정\n  data() {\n    return {\n      requestPage: 0,\n      noticeType: 0,\n      noticeList: []\n    };\n  },\n  watch: {\n    noticeType() {\n      this.fetchData();\n    },\n    requestPage() {\n      this.fetchData();\n    }\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    // fetchData를 click 이벤트에 넣어주고, 인자 안에는 해당 index를 넣어준다.\n    // 정의 내용에서는 셀렉 할 때 마다 바뀌는 컨텐츠(axios로 갖고 오는 값)을 넣어주면 된다.\n    async fetchData() {\n      let formData = new FormData();\n      formData.append(\"requestPage\", this.requestPage);\n      formData.append(\"noticeType\", this.noticeType);\n\n      // API list(formData);\n      const response = await listPage.list(formData);\n      console.log(\"폼데이타 \", response);\n      this.noticeList = response.data.result;\n      console.log(\"리스트\", this.noticeList);\n      window.scrollTo(0, 0);\n      // console.log(\"페이지넘버\", sel);\n      // // listpage는 api -> index.js에서 받아온 변수고, list는 해당 변수 안에 있던 함수.\n      // const res = await listPage.list(sel);\n      // console.log(res);\n      // // 초기값으로 설정한 items에 res.data.object를 담아준다.\n      // this.items = await res.data.result;\n      // console.log(\"items\", this.items);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.container {\n  width: 750px;\n  margin: 0 auto;\n  color: #1f2125;\n  h2 {\n    margin: 69px 0 45px 0;\n    font-size: 42px;\n    font-weight: bold;\n    line-height: 1.38;\n    text-align: center;\n  }\n\n  .list {\n    .select-list {\n      display: flex;\n\n      li {\n        margin-right: 20px;\n        padding-bottom: 15px;\n        cursor: pointer;\n\n        &.active {\n          font-weight: bold;\n          border-bottom: 4px solid #50b0b1;\n        }\n      }\n    }\n\n    .content-container {\n      border-top: solid 1px #e5e5e5;\n    }\n  }\n}\n</style>\n"]}]}